"""
Django settings for incubator project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
import dj_database_url


from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=tx=&&@+hwrum&mj^pcm-d3rfhug(e$7vv_^e^xkzzoa8hfe3a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["jeb.onrender.com"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_crontab',
    'users',
    'startups',
    'news',
    'events',
    'opportunities',
    'messageries',
    'files',
    'logs',
    'corsheaders',
    'import_api',
    'authentication',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'incubator.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'incubator.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

import os
from pathlib import Path as _P

# Chargement facultatif d'un fichier .env (simple parser) pour unifier config
_ENV_PATH = BASE_DIR / '.env'
if _ENV_PATH.exists():
    for _line in _ENV_PATH.read_text().splitlines():
        if not _line or _line.strip().startswith('#') or '=' not in _line:
            continue
        k, v = _line.split('=', 1)
        os.environ.setdefault(k.strip(), v.strip())

# Forcer Postgres: plus de fallback SQLite pour garantir unicité des environnements
DATABASES = {
    'default': dj_database_url.parse(
        "postgresql://merchex_user:09qsFhBzs8kb87mh0GsRuFaiwOHbOwuW@dpg-d2vvgvbe5dus73ei6nvg-a.oregon-postgres.render.com/jeb_we6l",
        conn_max_age=600,
        ssl_require=True
    )
}

# Protection explicite si Postgres inaccessible (message clair au lieu de fallback silencieux)
if DATABASES['default']['HOST'] in ('localhost', '127.0.0.1') and not os.environ.get('CI'):  # simple hint
    pass  # possibilité d'ajouter un check socket ici si besoin

JEB_API_TOKEN = "81d1160831e2f182a69c1526c6b5204e"
JEB_API_BASE = "https://api.jeb-incubator.com"

# Cron: exécution toutes les 2 heures à la minute 5
CRONJOBS = [
    ('5 */2 * * *', 'django.core.management.call_command', ['sync_all']),
]


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # ton front React
    "http://127.0.0.1:3000",
]

# En dev, autoriser toutes les origines pour faciliter les tests front
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True

# AUTH_USER_MODEL = 'users.Utilisateur'
